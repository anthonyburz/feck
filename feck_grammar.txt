instructions  = instruction {"\n" instruction}
instruction   = assign | value | print | if | while | puts | func_def

assign    = left_values "=" right_values
print     = "print" rvalues
puts      = "puts" rvalues
if        = "if" low_boolean_expression "\n" instructions "\n"
            {"elif" low_boolean_expression "\n" instructions "\n"}
            ["else" instructions "\n"] "end"
while     = "while" condition "\n" instructions "\n" "end"
func_def  = "def" designator ["(" [var_list] ")"] "\n"
            [instructions] "\n" "end"
call      = designator ["(" [value_list] ")"}]

left_values   = designator {"," designator}
right_values  = [value_list]
value_list    = value {"," value}
var_list      = variable {"," variable}

value = low_boolean_expression | number_expression | string

low_boolean_expression  = low_boolean_term {"or" low_boolean_term}
low_boolean_term        = low_boolean_factor {"and" low_boolean_factor}
low_boolean_factor      = ["not"] (condition | assign | high_boolean_expression)

high_boolean_expression = high_boolean_term {"||" high_boolean_term}
high_boolean_term       = high_boolean_factor {"&&" high_boolean_factor}
high_boolean_factor     = ["!"] (boolean | nil | call | "(" low_boolean_expression ")")

number_expression = ["-"] number_term {("+" | "-") number_term}
number_term       = number_power {("*" | "/" | "%") number_power}
number_power      = number_factor {"**" number_factor}
number_factor     = number | call | "(" (number_expression | assign) ")"

condition         = value_condition | number_condition
value_condition   = condition_value ("is" | "==" | "!=" ) condition_value
number_condition  = number_expression (">" | "<" | ">=" | "<=") number_expression

number            = float | integer
designator        = variable
condition_value   = high_boolean_expression | number_expression | string

variable  = ["$"] (letter) {letter}
string    = """ {[^"] | "\""} """
float     = integer "." integer
integer   = decimal {decimal}

letter    = uppercase | lowercase
uppercase = "A" | "B" | ... | "Z"
lowercase = "a" | "b" | ... | "z"
boolean   = "true" | "false"
nil_value = "nil"
decimal   = "0" | "1" | ... | "9"

